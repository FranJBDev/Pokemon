{"ast":null,"code":"var _jsxFileName = \"/home/gandhyman/PI2/client/src/components/Card.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  let {\n    name,\n    types,\n    image,\n    id,\n    weight,\n    height\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: name.charAt(0).toUpperCase() + name.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Img not found\",\n      height: \"190px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Types\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: types ? types.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Types not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/gandhyman/PI2/client/src/components/Card.jsx"],"names":["React","Card","name","types","image","id","weight","height","charAt","toUpperCase","slice","map","el"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,IAAT,OAA0D;AAAA,MAA5C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,EAAtB;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,GAA4C;AAErE,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA,gBAAUL,IAAI,CAACM,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BP,IAAI,CAACQ,KAAL,CAAW,CAAX;AAAzC;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,GAAG,EAAEN,KAAV;AAAiB,MAAA,GAAG,EAAC,eAArB;AAAqC,MAAA,MAAM,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,gBAEQD,KAAK,GAAGA,KAAK,CAACQ,GAAN,CAAUC,EAAE,IAAI;AACpB,4BACI;AAAA,oBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJO,CAAH,gBAMD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARZ;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;KAvBuBX,I","sourcesContent":["import React from 'react';\n\nexport default function Card({ name, types, image, id, weight, height }) {\n\n    return (\n        <div className='card'>\n            <span   >{name.charAt(0).toUpperCase() + name.slice(1)}</span>\n\n\n            <img src={image} alt=\"Img not found\" height=\"190px\" />\n\n            <span >Types</span>\n            <div  >\n                {\n                    types ? types.map(el => {\n                        return (\n                            <span>{el}</span>\n                        )\n                    }\n                    ) :\n                        <span>Types not found</span>\n                }\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}