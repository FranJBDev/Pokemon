{"ast":null,"code":"var _jsxFileName = \"/home/gandhyman/PI2/client/src/components/Card.jsx\";\nimport React from 'react';\nimport style from '../css/Card.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Card(_ref) {\n  let {\n    props\n  } = _ref;\n  let {\n    name,\n    types,\n    img,\n    id\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.card,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: name.charAt(0).toUpperCase() + name.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      width: \"200px\",\n      alt: \"Img not found\",\n      height: \"190px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", types ? types.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Types not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/gandhyman/PI2/client/src/components/Card.jsx"],"names":["React","style","Card","props","name","types","img","id","card","charAt","toUpperCase","slice","map","el"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,eAAe,SAASC,IAAT,OAAyB;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AACpC,MAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,GAAf;AAAoBC,IAAAA;AAApB,MAA2BJ,KAA/B;AACA,sBACI;AAAK,IAAA,SAAS,EAAEF,KAAK,CAACO,IAAtB;AAAA,4BACI;AAAA,gBAAOJ,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BN,IAAI,CAACO,KAAL,CAAW,CAAX;AAAtC;AAAA;AAAA;AAAA;AAAA,YADJ,oBAII;AAAK,MAAA,GAAG,EAAEL,GAAV;AAAe,MAAA,KAAK,EAAC,OAArB;AAA6B,MAAA,GAAG,EAAC,eAAjC;AAAiD,MAAA,MAAM,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI;AAAA,sBAEQD,KAAK,GAAGA,KAAK,CAACO,GAAN,CAAUC,EAAE,IAAI;AACpB,4BACI;AAAA,oBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJO,CAAH,gBAMD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARZ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;KAtBuBX,I","sourcesContent":["import React from 'react';\nimport style from '../css/Card.module.css';\n\nexport default function Card({ props }) {\n    let { name, types, img, id } = props\n    return (\n        <div className={style.card}>\n            <span>{name.charAt(0).toUpperCase() + name.slice(1)}</span> {\n                /* '~\\b([a-z])~'\n  */}\n            <img src={img} width='200px' alt=\"Img not found\" height=\"190px\" />\n\n            <div  > {/*Types*/}\n                {\n                    types ? types.map(el => {\n                        return (\n                            <span>{el}</span>\n                        )\n                    }\n                    ) :\n                        <span>Types not found</span>\n                }\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}